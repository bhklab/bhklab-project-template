{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Project Template for BHKLab Projects Project Overview The BHKLab project template aims to provide: Simple project setup with pixi, mkdocs, and basic DMP folder structure Support for reproducible research with proper documentation GitHub integrations and standardized workflow How this works This project uses the copier tool to maintain a standardized project template that follows the general structure of BHKLab repositories. Copier facilitates the management of project templates by using jinja2 templating for file/directory names and content in the template. Issues Please report any issues with the template to the bhklab/bhklab-project-template . Contributors Jermiah Joseph (@jjjermiah) Katy Scott (@strixy16)","title":"Home"},{"location":"#project-template-for-bhklab-projects","text":"","title":"Project Template for BHKLab Projects"},{"location":"#project-overview","text":"The BHKLab project template aims to provide: Simple project setup with pixi, mkdocs, and basic DMP folder structure Support for reproducible research with proper documentation GitHub integrations and standardized workflow","title":"Project Overview"},{"location":"#how-this-works","text":"This project uses the copier tool to maintain a standardized project template that follows the general structure of BHKLab repositories. Copier facilitates the management of project templates by using jinja2 templating for file/directory names and content in the template.","title":"How this works"},{"location":"#issues","text":"Please report any issues with the template to the bhklab/bhklab-project-template .","title":"Issues"},{"location":"#contributors","text":"Jermiah Joseph (@jjjermiah) Katy Scott (@strixy16)","title":"Contributors"},{"location":"meeting_notes/","text":"Meeting Agenda and Action Items google doc to meeting notes Latest Meeting Notes (Apr 25, 2025) Template Ideas: Simple/Project structure with pixi, mkdocs, basic DMP folder setup Package development templates for R and Python with project toml, ruff, CodeRabbit, Code coverage MkDocs Components: Home How to run code Where to get data Working notes Documenting symbolic links GitHub Actions: Check for presence of rawdata, procdata, results directories Documentation audits Optional CodeRabbit integration Action Items: Complete initial template structure \u2713 Document DMP best practices \u2713 Setup GitHub Actions workflows \ud83d\udea7 Test with real projects \ud83d\udea7","title":"Meeting Notes"},{"location":"meeting_notes/#meeting-agenda-and-action-items","text":"google doc to meeting notes","title":"Meeting Agenda and Action Items"},{"location":"meeting_notes/#latest-meeting-notes-apr-25-2025","text":"Template Ideas: Simple/Project structure with pixi, mkdocs, basic DMP folder setup Package development templates for R and Python with project toml, ruff, CodeRabbit, Code coverage MkDocs Components: Home How to run code Where to get data Working notes Documenting symbolic links GitHub Actions: Check for presence of rawdata, procdata, results directories Documentation audits Optional CodeRabbit integration Action Items: Complete initial template structure \u2713 Document DMP best practices \u2713 Setup GitHub Actions workflows \ud83d\udea7 Test with real projects \ud83d\udea7","title":"Latest Meeting Notes (Apr 25, 2025)"},{"location":"requirements/","text":"Project Requirements This document outlines the necessary prerequisites for using the BHKLab Project Template. System Requirements 1. Git Version Requirements You must have Git version 2.28 or higher installed on your system. This is because our template uses the --initial-branch option in the git init command. To check your Git version: git --version If your Git version is below 2.28, please update it following instructions for your operating system. 2. Pixi Tool Requirements Pixi is our preferred package manager and environment manager for this project. 2.1 Installing Pixi If you haven't installed Pixi yet: Visit the pixi documentation for installation instructions Follow the platform-specific instructions to install Pixi on your system 2.2 Verifying Installation After installation, run the following commands to verify that Pixi is properly installed: # Check pixi version pixi --version # Verify GitHub CLI is accessible through pixi pixi exec gh --help # Verify our project template tool is accessible pixi exec bhklab-project-template --help If any of these commands fail, please reinstall Pixi or make sure it's properly added to your PATH. 3. GitHub CLI Authentication Our template interacts with GitHub APIs through the GitHub CLI tool ( gh ), which requires authentication. 3.1 Logging into GitHub CLI Run the following command and follow the prompts to authenticate: pixi exec gh auth login --hostname 'github.com' --git-protocol https 3.2 Verifying Authentication To verify you're properly authenticated: pixi exec gh auth status This should show that you're logged in to GitHub. Organization Access Make sure you have been added to our lab organization(s) before proceeding with project creation! Without proper organization access, you won't be able to create repositories in our shared spaces. Troubleshooting If you encounter any issues setting up these requirements, please: Check the error messages for specific guidance Reach out to the lab's technical team if problems persist Our project template will automatically validate these requirements and provide helpful error messages if any prerequisites are not met.","title":"Requirements"},{"location":"requirements/#project-requirements","text":"This document outlines the necessary prerequisites for using the BHKLab Project Template.","title":"Project Requirements"},{"location":"requirements/#system-requirements","text":"","title":"System Requirements"},{"location":"requirements/#1-git-version-requirements","text":"You must have Git version 2.28 or higher installed on your system. This is because our template uses the --initial-branch option in the git init command. To check your Git version: git --version If your Git version is below 2.28, please update it following instructions for your operating system.","title":"1. Git Version Requirements"},{"location":"requirements/#2-pixi-tool-requirements","text":"Pixi is our preferred package manager and environment manager for this project.","title":"2. Pixi Tool Requirements"},{"location":"requirements/#21-installing-pixi","text":"If you haven't installed Pixi yet: Visit the pixi documentation for installation instructions Follow the platform-specific instructions to install Pixi on your system","title":"2.1 Installing Pixi"},{"location":"requirements/#22-verifying-installation","text":"After installation, run the following commands to verify that Pixi is properly installed: # Check pixi version pixi --version # Verify GitHub CLI is accessible through pixi pixi exec gh --help # Verify our project template tool is accessible pixi exec bhklab-project-template --help If any of these commands fail, please reinstall Pixi or make sure it's properly added to your PATH.","title":"2.2 Verifying Installation"},{"location":"requirements/#3-github-cli-authentication","text":"Our template interacts with GitHub APIs through the GitHub CLI tool ( gh ), which requires authentication.","title":"3. GitHub CLI Authentication"},{"location":"requirements/#31-logging-into-github-cli","text":"Run the following command and follow the prompts to authenticate: pixi exec gh auth login --hostname 'github.com' --git-protocol https","title":"3.1 Logging into GitHub CLI"},{"location":"requirements/#32-verifying-authentication","text":"To verify you're properly authenticated: pixi exec gh auth status This should show that you're logged in to GitHub. Organization Access Make sure you have been added to our lab organization(s) before proceeding with project creation! Without proper organization access, you won't be able to create repositories in our shared spaces.","title":"3.2 Verifying Authentication"},{"location":"requirements/#troubleshooting","text":"If you encounter any issues setting up these requirements, please: Check the error messages for specific guidance Reach out to the lab's technical team if problems persist Our project template will automatically validate these requirements and provide helpful error messages if any prerequisites are not met.","title":"Troubleshooting"},{"location":"status/","text":"Status and Roadmap [x] Basic template structure with copier [x] Pixi integration with conda-forge/bioconda channels and platforms (linux-64, osx-arm64, win-64, osx-64) [x] DMP structure with proper README files [x] workflow/notebooks [x] workflow/scripts [x] data/rawdata (gitignored with README) [x] data/procdata (gitignored with README) [x] data/results (gitignored with README) [x] MkDocs setup with basic pages structure [x] Home page (links to README) [x] Usage page (how to run code) [x] Data Sources page (documentation for rawdata) [x] Developer Notes page (working notes/journal) [x] GitHub repository creation automation with gh CLI [x] GitHub Pages setup with automatic deployment [x] GitHub Actions workflow for releases [x] GitHub Actions to audit DMP structure (check for accidental commits in data directories) [x] Conventional PR title enforcement in GitHub Actions [ ] Example walkthrough of creating a project with the template [ ] Add pre-commit hooks for basic quality checks [ ] Add section for future links to manuscript/publication in README template [ ] Create additional environment for snakemake workflows if needed [ ] Add optional R project template support [ ] Create testing framework for the template itself","title":"Status"},{"location":"status/#status-and-roadmap","text":"[x] Basic template structure with copier [x] Pixi integration with conda-forge/bioconda channels and platforms (linux-64, osx-arm64, win-64, osx-64) [x] DMP structure with proper README files [x] workflow/notebooks [x] workflow/scripts [x] data/rawdata (gitignored with README) [x] data/procdata (gitignored with README) [x] data/results (gitignored with README) [x] MkDocs setup with basic pages structure [x] Home page (links to README) [x] Usage page (how to run code) [x] Data Sources page (documentation for rawdata) [x] Developer Notes page (working notes/journal) [x] GitHub repository creation automation with gh CLI [x] GitHub Pages setup with automatic deployment [x] GitHub Actions workflow for releases [x] GitHub Actions to audit DMP structure (check for accidental commits in data directories) [x] Conventional PR title enforcement in GitHub Actions [ ] Example walkthrough of creating a project with the template [ ] Add pre-commit hooks for basic quality checks [ ] Add section for future links to manuscript/publication in README template [ ] Create additional environment for snakemake workflows if needed [ ] Add optional R project template support [ ] Create testing framework for the template itself","title":"Status and Roadmap"},{"location":"troubleshooting/","text":"Troubleshooting I have tried to simplify this setup as much as possible including the setup of the remote GitHub repository and the GitHub Actions workflow, and deploying the documentation to GitHub Pages. However in case you run into issues, here are some troubleshooting steps. Setting up GitHub Actions Step 1: Go to settings > Actions > General in your GitHub repository. Step 2: Select Allow all actions and reusable workflows in the Workflow permissions section + CLICK Save Step 3: Scroll down to the Workflow permissions section and select Read and write permissions AND Allow GitHub Actions to create and approve pull requests Setting up GitHub Pages Warning Before being able to deploy the documentation, you need to set up GitHub Pages. This is a one-time setup for the repository. The documentation will be deployed automatically to GitHub Pages when you push to the main branch. However, you need to create a gh-pages branch in your repository. You can do this by running the following command: ``` git branch gh-pages git push origin gh-pages ``` This is only possible after you have created the repository on GitHub. The template will use mkdocs to build the documentation and deploy it to GitHub Pages. To set up GitHub Pages, follow these steps: Step 1: Go to settings > Pages in your GitHub repository. Step 2: Select Deploy from a branch in the Source section. Step 3: Select gh-pages branch and / (root) folder in the Branch section. Step 4: Click Save .","title":"Troubleshooting"},{"location":"troubleshooting/#troubleshooting","text":"I have tried to simplify this setup as much as possible including the setup of the remote GitHub repository and the GitHub Actions workflow, and deploying the documentation to GitHub Pages. However in case you run into issues, here are some troubleshooting steps.","title":"Troubleshooting"},{"location":"troubleshooting/#setting-up-github-actions","text":"Step 1: Go to settings > Actions > General in your GitHub repository. Step 2: Select Allow all actions and reusable workflows in the Workflow permissions section + CLICK Save Step 3: Scroll down to the Workflow permissions section and select Read and write permissions AND Allow GitHub Actions to create and approve pull requests","title":"Setting up GitHub Actions"},{"location":"troubleshooting/#setting-up-github-pages","text":"Warning Before being able to deploy the documentation, you need to set up GitHub Pages. This is a one-time setup for the repository. The documentation will be deployed automatically to GitHub Pages when you push to the main branch. However, you need to create a gh-pages branch in your repository. You can do this by running the following command: ``` git branch gh-pages git push origin gh-pages ``` This is only possible after you have created the repository on GitHub. The template will use mkdocs to build the documentation and deploy it to GitHub Pages. To set up GitHub Pages, follow these steps: Step 1: Go to settings > Pages in your GitHub repository. Step 2: Select Deploy from a branch in the Source section. Step 3: Select gh-pages branch and / (root) folder in the Branch section. Step 4: Click Save .","title":"Setting up GitHub Pages"},{"location":"usage/","text":"Usage Run the following command to create a new project. Replace <PROJECT_NAME> with the name of your project. using pixi pixi exec bhklab-project-template <PROJECT_NAME> i.e gdcs-drug-combo would create a directory called gdcs-drug-combo pixi exec bhklab-project-template gdcs-drug-combo using uv uvx bhklab_project_template <PROJECT_NAME> using copier copier copy --trust gh:bhklab/bhklab-project-template <PROJECT_NAME> This will create a new directory with the name of your project and copy the template files into it.","title":"Usage"},{"location":"usage/#usage","text":"Run the following command to create a new project. Replace <PROJECT_NAME> with the name of your project.","title":"Usage"},{"location":"usage/#using-pixi","text":"pixi exec bhklab-project-template <PROJECT_NAME> i.e gdcs-drug-combo would create a directory called gdcs-drug-combo pixi exec bhklab-project-template gdcs-drug-combo","title":"using pixi"},{"location":"usage/#using-uv","text":"uvx bhklab_project_template <PROJECT_NAME>","title":"using uv"},{"location":"usage/#using-copier","text":"copier copy --trust gh:bhklab/bhklab-project-template <PROJECT_NAME> This will create a new directory with the name of your project and copy the template files into it.","title":"using copier"}]}