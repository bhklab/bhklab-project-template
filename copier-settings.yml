_answers_file: .bhklab-template-builder-answers.yml

_exclude:
    - includes

_templates_suffix: .jinja

_subdirectory: TEMPLATE

_message_before_copy: |
    Thanks for generating a project using our template.

    You'll be asked a series of questions whose answers will be used to
    generate a tailored project for you.

_tasks:
    - echo "Initializing a git repository..."
    - git init --initial-branch=main

    - echo "Initializing pixi project..."
    - pixi lock

    - echo "Creating project structure..."
    - mkdir -p config metadata resources logs sandbox
    - mkdir -p data/procdata data/rawdata data/results
    - mkdir -p workflow/notebooks workflow/scripts

    - echo "Initializing git repository..."
    - command: ["git", "add", "."]
    - command: ["git", "commit", "-m", "feat: first commit"]
    - pixi exec gh repo create --public --source=. --remote=origin --push {{ repo_location }}/{{ project_slug }}

    - pixi exec gh repo edit --homepage="https://{{ repo_location }}.github.io/{{ project_slug }}" --description="{{ project_description }}"

    # we need to create the gh-pages branch to host the static site
    # this command will create it and push it to the remote
    - command: ["git", "branch", "gh-pages"]
    - command: ["git", "push", "-u", "origin", "gh-pages"]

    # turns out this is not needed, the gh-pages is setup automatically after creating the branch
    # - pixi exec gh api --method POST repos/{{ repo_location }}/{{ project_slug }}/pages -f "source[branch]=gh-pages" -f "source[path]=/"

_message_after_copy: |
    Your project "{{ project_name }}" has been created successfully!

    Next steps:

    1. Change directory to the project root:

        $ cd {{ _copier_conf.dst_path }}

    2. Enter the `dev` environment:

        $ pixi shell -e dev
